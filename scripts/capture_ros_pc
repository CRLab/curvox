#!/usr/bin/env python2

import argparse
import rospy
from src import curvox


def parse_args():
    parser = argparse.ArgumentParser(description="Capture a pointcloud from a ROS network and save it as a pcd file")
    parser.add_argument('pc_topic', type=str, help='ROS pointcloud topic')
    parser.add_argument('out_filename', type=str, help='Output filename')
    parser.add_argument('--source_frame', type=str, default=None, help='tf for cloud')
    parser.add_argument('--target_frame', type=str, default=None, help='dest tf for cloud')
    parser.add_argument('--as_binvox', action='store_true', help='Capture pointcloud as a binvox instead')

    args = parser.parse_args()
    return args


def main():
    args = parse_args()

    rospy.init_node("pc_capture_node")

    if args.source_frame and args.target_frame:
        pcl_pc = curvox.cloud_transformations.capture_cloud_and_transform(
            args.pc_topic,
            args.source_frame,
            args.target_frame
        )
    else:
        pcl_pc = curvox.cloud_transformations.capture_cloud(args.pc_topic)
    
    pcl_pc.to_file(args.out_filename)


if __name__ == "__main__":
    main()
